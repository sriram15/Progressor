// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as database$0 from "../database/models.js";

export function AddProjectSkill(projectID: number, skillID: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(368277557, projectID, skillID) as any;
    return $resultPromise;
}

export function GetProjects(): Promise<database$0.Project[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3618001310) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetSkillsForProject(projectID: number): Promise<database$0.UserSkill[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3683030926, projectID) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType3($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function IsValidProject(projectId: number): Promise<boolean> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3941042563, projectId) as any;
    return $resultPromise;
}

export function RemoveProjectSkill(projectID: number, skillID: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(31008102, projectID, skillID) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = database$0.Project.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = database$0.UserSkill.createFrom;
const $$createType3 = $Create.Array($$createType2);
