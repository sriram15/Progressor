// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as database$0 from "../database/models.js";

export function CreateSkill(userID: number, name: string, description: string): Promise<database$0.UserSkill | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2681002913, userID, name, description) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function DeleteSkill(id: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1636053632, id) as any;
    return $resultPromise;
}

export function GetSkillByID(id: number): Promise<database$0.UserSkill | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2508026805, id) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetSkillsByUserID(userID: number): Promise<database$0.UserSkill[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1828016617, userID) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType2($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetUserSkillProgress(userID: number, skillID: number): Promise<database$0.UserSkillProgress | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4191771415, userID, skillID) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType4($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function RegisterEventHandlers(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2744204602) as any;
    return $resultPromise;
}

export function UpdateSkill(id: number, name: string, description: string): Promise<database$0.UserSkill | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(530893106, id, name, description) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

// Private type creation functions
const $$createType0 = database$0.UserSkill.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $Create.Array($$createType0);
const $$createType3 = database$0.UserSkillProgress.createFrom;
const $$createType4 = $Create.Nullable($$createType3);
