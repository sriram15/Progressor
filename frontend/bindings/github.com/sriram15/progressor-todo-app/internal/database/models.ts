// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as sql$0 from "../../../../../database/sql/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as time$0 from "../../../../../time/models.js";

export class GetCardRow {
    "card_id": number;
    "title": string;
    "description": sql$0.NullString;
    "createdat": sql$0.NullTime;
    "updatedat": sql$0.NullTime;
    "status": number;
    "completedat": sql$0.NullTime;
    "isactive": boolean;
    "estimatedmins": number;
    "trackedmins": number;
    "projectid": number;
    "time_entry_id": sql$0.NullInt64;
    "starttime": sql$0.NullTime;
    "endtime": sql$0.NullTime;

    /** Creates a new GetCardRow instance. */
    constructor($$source: Partial<GetCardRow> = {}) {
        if (!("card_id" in $$source)) {
            this["card_id"] = 0;
        }
        if (!("title" in $$source)) {
            this["title"] = "";
        }
        if (!("description" in $$source)) {
            this["description"] = (new sql$0.NullString());
        }
        if (!("createdat" in $$source)) {
            this["createdat"] = (new sql$0.NullTime());
        }
        if (!("updatedat" in $$source)) {
            this["updatedat"] = (new sql$0.NullTime());
        }
        if (!("status" in $$source)) {
            this["status"] = 0;
        }
        if (!("completedat" in $$source)) {
            this["completedat"] = (new sql$0.NullTime());
        }
        if (!("isactive" in $$source)) {
            this["isactive"] = false;
        }
        if (!("estimatedmins" in $$source)) {
            this["estimatedmins"] = 0;
        }
        if (!("trackedmins" in $$source)) {
            this["trackedmins"] = 0;
        }
        if (!("projectid" in $$source)) {
            this["projectid"] = 0;
        }
        if (!("time_entry_id" in $$source)) {
            this["time_entry_id"] = (new sql$0.NullInt64());
        }
        if (!("starttime" in $$source)) {
            this["starttime"] = (new sql$0.NullTime());
        }
        if (!("endtime" in $$source)) {
            this["endtime"] = (new sql$0.NullTime());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new GetCardRow instance from a string or object.
     */
    static createFrom($$source: any = {}): GetCardRow {
        const $$createField2_0 = $$createType0;
        const $$createField3_0 = $$createType1;
        const $$createField4_0 = $$createType1;
        const $$createField6_0 = $$createType1;
        const $$createField11_0 = $$createType2;
        const $$createField12_0 = $$createType1;
        const $$createField13_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("description" in $$parsedSource) {
            $$parsedSource["description"] = $$createField2_0($$parsedSource["description"]);
        }
        if ("createdat" in $$parsedSource) {
            $$parsedSource["createdat"] = $$createField3_0($$parsedSource["createdat"]);
        }
        if ("updatedat" in $$parsedSource) {
            $$parsedSource["updatedat"] = $$createField4_0($$parsedSource["updatedat"]);
        }
        if ("completedat" in $$parsedSource) {
            $$parsedSource["completedat"] = $$createField6_0($$parsedSource["completedat"]);
        }
        if ("time_entry_id" in $$parsedSource) {
            $$parsedSource["time_entry_id"] = $$createField11_0($$parsedSource["time_entry_id"]);
        }
        if ("starttime" in $$parsedSource) {
            $$parsedSource["starttime"] = $$createField12_0($$parsedSource["starttime"]);
        }
        if ("endtime" in $$parsedSource) {
            $$parsedSource["endtime"] = $$createField13_0($$parsedSource["endtime"]);
        }
        return new GetCardRow($$parsedSource as Partial<GetCardRow>);
    }
}

export class GetDailyTotalMinutesRow {
    "date": any;
    "total_minutes": sql$0.NullFloat64;

    /** Creates a new GetDailyTotalMinutesRow instance. */
    constructor($$source: Partial<GetDailyTotalMinutesRow> = {}) {
        if (!("date" in $$source)) {
            this["date"] = null;
        }
        if (!("total_minutes" in $$source)) {
            this["total_minutes"] = (new sql$0.NullFloat64());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new GetDailyTotalMinutesRow instance from a string or object.
     */
    static createFrom($$source: any = {}): GetDailyTotalMinutesRow {
        const $$createField1_0 = $$createType3;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("total_minutes" in $$parsedSource) {
            $$parsedSource["total_minutes"] = $$createField1_0($$parsedSource["total_minutes"]);
        }
        return new GetDailyTotalMinutesRow($$parsedSource as Partial<GetDailyTotalMinutesRow>);
    }
}

export class ListCardsRow {
    "id": number;
    "title": string;
    "description": sql$0.NullString;
    "createdat": sql$0.NullTime;
    "updatedat": sql$0.NullTime;
    "status": number;
    "completedat": sql$0.NullTime;
    "estimatedmins": number;
    "trackedmins": number;
    "isactive": boolean;
    "projectid": number;
    "card_id": number;

    /** Creates a new ListCardsRow instance. */
    constructor($$source: Partial<ListCardsRow> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("title" in $$source)) {
            this["title"] = "";
        }
        if (!("description" in $$source)) {
            this["description"] = (new sql$0.NullString());
        }
        if (!("createdat" in $$source)) {
            this["createdat"] = (new sql$0.NullTime());
        }
        if (!("updatedat" in $$source)) {
            this["updatedat"] = (new sql$0.NullTime());
        }
        if (!("status" in $$source)) {
            this["status"] = 0;
        }
        if (!("completedat" in $$source)) {
            this["completedat"] = (new sql$0.NullTime());
        }
        if (!("estimatedmins" in $$source)) {
            this["estimatedmins"] = 0;
        }
        if (!("trackedmins" in $$source)) {
            this["trackedmins"] = 0;
        }
        if (!("isactive" in $$source)) {
            this["isactive"] = false;
        }
        if (!("projectid" in $$source)) {
            this["projectid"] = 0;
        }
        if (!("card_id" in $$source)) {
            this["card_id"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ListCardsRow instance from a string or object.
     */
    static createFrom($$source: any = {}): ListCardsRow {
        const $$createField2_0 = $$createType0;
        const $$createField3_0 = $$createType1;
        const $$createField4_0 = $$createType1;
        const $$createField6_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("description" in $$parsedSource) {
            $$parsedSource["description"] = $$createField2_0($$parsedSource["description"]);
        }
        if ("createdat" in $$parsedSource) {
            $$parsedSource["createdat"] = $$createField3_0($$parsedSource["createdat"]);
        }
        if ("updatedat" in $$parsedSource) {
            $$parsedSource["updatedat"] = $$createField4_0($$parsedSource["updatedat"]);
        }
        if ("completedat" in $$parsedSource) {
            $$parsedSource["completedat"] = $$createField6_0($$parsedSource["completedat"]);
        }
        return new ListCardsRow($$parsedSource as Partial<ListCardsRow>);
    }
}

export class Project {
    "id": number;
    "name": string;
    "createdat": sql$0.NullTime;

    /** Creates a new Project instance. */
    constructor($$source: Partial<Project> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("createdat" in $$source)) {
            this["createdat"] = (new sql$0.NullTime());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Project instance from a string or object.
     */
    static createFrom($$source: any = {}): Project {
        const $$createField2_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("createdat" in $$parsedSource) {
            $$parsedSource["createdat"] = $$createField2_0($$parsedSource["createdat"]);
        }
        return new Project($$parsedSource as Partial<Project>);
    }
}

export class TimeEntry {
    "id": number;
    "cardid": number;
    "starttime": time$0.Time;
    "endtime": time$0.Time;
    "duration": number;

    /** Creates a new TimeEntry instance. */
    constructor($$source: Partial<TimeEntry> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("cardid" in $$source)) {
            this["cardid"] = 0;
        }
        if (!("starttime" in $$source)) {
            this["starttime"] = null;
        }
        if (!("endtime" in $$source)) {
            this["endtime"] = null;
        }
        if (!("duration" in $$source)) {
            this["duration"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new TimeEntry instance from a string or object.
     */
    static createFrom($$source: any = {}): TimeEntry {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new TimeEntry($$parsedSource as Partial<TimeEntry>);
    }
}

export class UserSkill {
    "id": number;
    "user_id": number;
    "name": string;
    "description": sql$0.NullString;
    "created_at": sql$0.NullTime;
    "updated_at": sql$0.NullTime;

    /** Creates a new UserSkill instance. */
    constructor($$source: Partial<UserSkill> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("user_id" in $$source)) {
            this["user_id"] = 0;
        }
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("description" in $$source)) {
            this["description"] = (new sql$0.NullString());
        }
        if (!("created_at" in $$source)) {
            this["created_at"] = (new sql$0.NullTime());
        }
        if (!("updated_at" in $$source)) {
            this["updated_at"] = (new sql$0.NullTime());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new UserSkill instance from a string or object.
     */
    static createFrom($$source: any = {}): UserSkill {
        const $$createField3_0 = $$createType0;
        const $$createField4_0 = $$createType1;
        const $$createField5_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("description" in $$parsedSource) {
            $$parsedSource["description"] = $$createField3_0($$parsedSource["description"]);
        }
        if ("created_at" in $$parsedSource) {
            $$parsedSource["created_at"] = $$createField4_0($$parsedSource["created_at"]);
        }
        if ("updated_at" in $$parsedSource) {
            $$parsedSource["updated_at"] = $$createField5_0($$parsedSource["updated_at"]);
        }
        return new UserSkill($$parsedSource as Partial<UserSkill>);
    }
}

export class UserSkillProgress {
    "id": number;
    "user_id": number;
    "skill_id": number;
    "total_minutes_tracked": sql$0.NullInt64;
    "last_updated": sql$0.NullTime;

    /** Creates a new UserSkillProgress instance. */
    constructor($$source: Partial<UserSkillProgress> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("user_id" in $$source)) {
            this["user_id"] = 0;
        }
        if (!("skill_id" in $$source)) {
            this["skill_id"] = 0;
        }
        if (!("total_minutes_tracked" in $$source)) {
            this["total_minutes_tracked"] = (new sql$0.NullInt64());
        }
        if (!("last_updated" in $$source)) {
            this["last_updated"] = (new sql$0.NullTime());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new UserSkillProgress instance from a string or object.
     */
    static createFrom($$source: any = {}): UserSkillProgress {
        const $$createField3_0 = $$createType2;
        const $$createField4_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("total_minutes_tracked" in $$parsedSource) {
            $$parsedSource["total_minutes_tracked"] = $$createField3_0($$parsedSource["total_minutes_tracked"]);
        }
        if ("last_updated" in $$parsedSource) {
            $$parsedSource["last_updated"] = $$createField4_0($$parsedSource["last_updated"]);
        }
        return new UserSkillProgress($$parsedSource as Partial<UserSkillProgress>);
    }
}

// Private type creation functions
const $$createType0 = sql$0.NullString.createFrom;
const $$createType1 = sql$0.NullTime.createFrom;
const $$createType2 = sql$0.NullInt64.createFrom;
const $$createType3 = sql$0.NullFloat64.createFrom;
