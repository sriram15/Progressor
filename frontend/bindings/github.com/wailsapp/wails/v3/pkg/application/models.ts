// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

/**
 * ServiceOptions provides optional parameters for calls to [NewService].
 */
export class ServiceOptions {
    /**
     * Name can be set to override the name of the service
     * for logging and debugging purposes.
     * 
     * If empty, it will default
     * either to the value obtained through the [ServiceName] interface,
     * or to the type name.
     */
    "Name": string;

    /**
     * If the service instance implements [http.Handler],
     * it will be mounted on the internal asset server
     * at the prefix specified by Route.
     */
    "Route": string;

    /**
     * MarshalError will be called if non-nil
     * to marshal to JSON the error values returned by this service's methods.
     * 
     * MarshalError is not allowed to fail,
     * but it may return a nil slice to fall back
     * to the globally configured error handler.
     * 
     * If the returned slice is not nil, it must contain valid JSON.
     */
    "MarshalError": any;

    /** Creates a new ServiceOptions instance. */
    constructor($$source: Partial<ServiceOptions> = {}) {
        if (!("Name" in $$source)) {
            this["Name"] = "";
        }
        if (!("Route" in $$source)) {
            this["Route"] = "";
        }
        if (!("MarshalError" in $$source)) {
            this["MarshalError"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ServiceOptions instance from a string or object.
     */
    static createFrom($$source: any = {}): ServiceOptions {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ServiceOptions($$parsedSource as Partial<ServiceOptions>);
    }
}
